// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Page {
  id               String   @id @default(cuid())
  title            String
  slug             String   @unique
  content          String
  excerpt          String?
  metaTitle        String?
  metaDescription  String?
  visibility       String   @default("public") // public, private, password_protected
  password         String?
  template         String?
  status           String   @default("draft")  // draft, published
  headerMenu       String?  // Reference to menu ID for header
  footerMenu       String?  // Reference to menu ID for footer
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Template {
  id        String   @id @default(cuid())
  name      String
  content   String    // store elements as a stringified JSON
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model LandingPage {
  id        String   @id @default(cuid())
  title     String
  campaign  String?
  content   String    // store elements as a stringified JSON
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Menu {
  id        String   @id @default(cuid())
  name      String
  location  String? // header, footer, sidebar
  items     String  // JSON array of menu items
  style     String? // JSON object for menu styling
  isActive  Boolean @default(true) // Whether the menu is active
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}